//
// Generated file, do not edit! Created by nedtool 5.6 from appendEntriesMsg.msg.
//

#ifndef __APPENDENTRIESMSG_M_H
#define __APPENDENTRIESMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>appendEntriesMsg.msg:20</tt> by nedtool.
 * <pre>
 * message AppendEntriesMsg
 * {
 *     int term;			// leader’s term
 *     int leaderId;		// so follower can redirect clients
 *     int prevLogIndex; 	// index of log entry immediately preceding new ones
 *     int prevLogTerm; 	// term of prevLogIndex entry
 *     //logList entries[];  // log entries to store (empty for heartbeat; may send more than one for efficiency)
 *     int leaderCommit;	// Leader’s commitIndex
 * }
 * </pre>
 */
class AppendEntriesMsg : public ::omnetpp::cMessage
{
  protected:
    int term;
    int leaderId;
    int prevLogIndex;
    int prevLogTerm;
    int leaderCommit;

  private:
    void copy(const AppendEntriesMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppendEntriesMsg&);

  public:
    AppendEntriesMsg(const char *name=nullptr, short kind=0);
    AppendEntriesMsg(const AppendEntriesMsg& other);
    virtual ~AppendEntriesMsg();
    AppendEntriesMsg& operator=(const AppendEntriesMsg& other);
    virtual AppendEntriesMsg *dup() const override {return new AppendEntriesMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getTerm() const;
    virtual void setTerm(int term);
    virtual int getLeaderId() const;
    virtual void setLeaderId(int leaderId);
    virtual int getPrevLogIndex() const;
    virtual void setPrevLogIndex(int prevLogIndex);
    virtual int getPrevLogTerm() const;
    virtual void setPrevLogTerm(int prevLogTerm);
    virtual int getLeaderCommit() const;
    virtual void setLeaderCommit(int leaderCommit);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppendEntriesMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppendEntriesMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __APPENDENTRIESMSG_M_H

