//
// Generated file, do not edit! Created by nedtool 5.6 from serverReplyClientRequestMsg.msg.
//

#ifndef __SERVERREPLYCLIENTREQUESTMSG_M_H
#define __SERVERREPLYCLIENTREQUESTMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>serverReplyClientRequestMsg.msg:16</tt> by nedtool.
 * <pre>
 * message ServerReplyClientRequestMsg
 * {
 *     int sourceAddr;		// address of the server replying
 *     int destAddr;		// address of the client that sent the request
 *     int leaderAddr;		// if client request is sent to a FOLLOWER server, it replies with the address of the most recent leader it knows. 
 *     int result;			// to simulate the result response of the leader to the client request message
 *     int serialNumber;	// serial number of the request message the Leader is responding to
 * }
 * </pre>
 */
class ServerReplyClientRequestMsg : public ::omnetpp::cMessage
{
  protected:
    int sourceAddr;
    int destAddr;
    int leaderAddr;
    int result;
    int serialNumber;

  private:
    void copy(const ServerReplyClientRequestMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ServerReplyClientRequestMsg&);

  public:
    ServerReplyClientRequestMsg(const char *name=nullptr, short kind=0);
    ServerReplyClientRequestMsg(const ServerReplyClientRequestMsg& other);
    virtual ~ServerReplyClientRequestMsg();
    ServerReplyClientRequestMsg& operator=(const ServerReplyClientRequestMsg& other);
    virtual ServerReplyClientRequestMsg *dup() const override {return new ServerReplyClientRequestMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSourceAddr() const;
    virtual void setSourceAddr(int sourceAddr);
    virtual int getDestAddr() const;
    virtual void setDestAddr(int destAddr);
    virtual int getLeaderAddr() const;
    virtual void setLeaderAddr(int leaderAddr);
    virtual int getResult() const;
    virtual void setResult(int result);
    virtual int getSerialNumber() const;
    virtual void setSerialNumber(int serialNumber);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ServerReplyClientRequestMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ServerReplyClientRequestMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SERVERREPLYCLIENTREQUESTMSG_M_H

